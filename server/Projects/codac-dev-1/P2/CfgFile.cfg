
Class = RealTimeApplication
+Functions = {
    Class = ReferenceContainer
    +GAM1 = {
            Class = IOGAM
            InputSignals = {
                SignalIn1 = {
                    DataSource = DDB
                    Type = int8
                    NumberOfDimensions = 0
                    Trigger = 0 
                }
                SignalIn2 = {
                    DataSource = DDB
                    Type = uint32
                    NumberOfDimensions = 1
                    NumberOfElements = 10
                    Trigger = 1 
                }
            }
            OutputSignals = {
                SignalOut1 = {
                    DataSource = DDB
                    Type = int8
                    NumberOfDimensions = 0
                    Trigger = 0 
                }
                SignalOut2 = {
                    DataSource = DDB
                    Type = int32
                    NumberOfDimensions = 1
                    NumberOfElements = 10
                    Trigger = 0 
                }
            }
    }
    +SendMessage_Ready_Progress = {
            Class = MessageGAM
            TriggerOnChange = 0
            +Events = {
                Class = ReferenceContainer
                +SwitchToStableEvent = {
                    Class = EventConditionTrigger
                    EventTrigger = {
                        Command_ReadyCondition = 1
                    }
                    +SwitchToStableMessage = {
                        Class = Message
                        Destination = StateMachine
                        Function = START
                        Mode = ExpectsReply
                        +Parameters = {
                            Class = ConfigurationDatabase
                        }    
                    }
                }
                +SwitchToErrorEvent = {
                    Class = EventConditionTrigger
                    EventTrigger = {
                        Command_StandbyCondition = 0
                        CommandScuUnstableCondition = 0
                    }
                    +SwitchToErrorMessage = {
                        Class = Message
                        Destination = StateMachine
                        Function = STOP
                        Mode = ExpectsReply
                        +Parameters = {
                            Class = ConfigurationDatabase
                        }    
                    }
                }
                +SwitchToErrorEventTimeout = {
                    Class = EventConditionTrigger
                    EventTrigger = {
                        CommandTimeoutConditionReadyProgress = 1
                    }
                    +SwitchToErrorMessage = {
                        Class = Message
                        Destination = EPICS_CA
                        Function = Start
                        Mode = ExpectsReply
                        +Parameters = {
                            Class = ConfigurationDatabase
                        }    
                    }
                }
            }
            InputSignals = {
                Command_StandbyCondition = {
                    DataSource = DDB
                    Type = uint32
                    Alias = StandbyCondition
                }
                Command_ReadyCondition = {
                    DataSource = DDB
                    Type = uint32
                    Alias = ReadyCondition
                }
                CommandScuUnstableCondition = {
                    DataSource = DDB
                    Type = uint8
                    Alias = ScuUnstableCondition
                }
                CommandTimeoutConditionReadyProgress = {
                    DataSource = DDB
                    Type = uint8
                    Alias = TimeoutConditionReadyProgress
                }
            }
            OutputSignals = {
                Clear_StandbyCondition = {
                    DataSource = DDB
                    Type = uint32
                }
                Clear_ReadyCondition = {
                    DataSource = DDB
                    Type = uint32
                }
                Clear_ScuUnstableCondition = {
                    DataSource = DDB
                    Type = uint32
                }
                Clear_TimeoutConditionReadyProgress = {
                    DataSource = DDB
                    Type = uint32
                }
            }
    }
}
+Data = {
    Class = ReferenceContainer
    +Timings = {
        Class = TimingDataSource
    } 
    +Timings = {
    }
    +DDB = {
        Class = GAMDataSource
        AllowNoProducers = 1
        ResetUnusedVariablesAtStateChange = 2
    }
    +LinuxTimer = {
        Class = LinuxTimer
        SleepNature = Default
        ExecutionMode = IndependentThread
        Signals = {
            Counter = {
                NumberOfDimensions = 0
                NumberOfElements = 1
                Type =  uint32
            }
            Time = {
                NumberOfDimensions = 0
                NumberOfElements = 1
                Type =  uint32
            }
            AbsoluteTime = {
                NumberOfDimensions = 0
                NumberOfElements = 1
                Type =  uint64
            }
            DeltaTime = {
                NumberOfDimensions = 0
                NumberOfElements = 1
                Type =  uint64
            }
        }
    }
    +DANWriter1 = {
        Class = SDN::DANPublisher
        NumberOfBuffers = 200000
        StackSize = 10000000
        CPUMask = 0x40000000000
        StoreOnTrigger = 1
        DanBufferMultiplier = 4
        NumberOfPreTriggers = 0
        NumberOfPostTriggers = 0
    }
}
+States = {
    Class = ReferenceContainer
    +IDLE = {
        Class = RealTimeState
        +Threads = {
            Class = ReferenceContainer
            +Thread1 = {
                Class = RealTimeThread
                CPUs = 1
                Functions  = { GAM1, SendMessage_Ready_Progress }
            }
            +Thread2 = {
                Class = RealTimeThread
                CPUs = 2
                Functions  = { GAM1, MathExpressionGAM }
            }
        }
    }
}
+Scheduler = {
    Class = GAMScheduler
    TimingDataSource = Timings
}