+EPICS_CA = {
    Class = EPICS::EPICSCAClient
	StackSize = 1048576
	CPUs = 0xC0
    AutoStart = 0
    +SUP_COMMAND = {
        Class = EPICS::EPICSPV
		PVName = "FATTOOLS::ALL::SUP_COMMAND"
        PVType = uint32
        Event = {
            PVValue = Message
        }
        +ChangeSupCommand = {
            Class = Message
            Destination = StateMachine
            Function = STOP
            +Parameters = {
                Class = ConfigurationDatabase
                SignalName = SupCommand_Epics
                SignalValue = "$PVValue"
            }
        }
    }
    +ADD_APS1_VREF_TRIPLES = {
        Class = EPICS::EPICSPV
		PVName = "FATTOOLS::DCRIO1::APS1_V_ADD"
        PVType = uint32
		Event = {
    		Destination = StateMachine
    		PVValue = Function
    		FunctionMap = {{"1", "START"}}
        }
    }
}    


+StateMachine = {
    Class = StateMachine
    
    +INIT = {
        Class = ReferenceContainer
        
        +START = {
            Class=StateMachineEvent
            NextState = "IDLE"
            NextStateError = "IDLE"
            
            +PrepareNextState = {
                Class=Message
                Destination=NewApplication
                Function=PrepareNextState
                Mode=ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = IDLE
                }    
            }
            +StartApplication = {
                Class=Message
                Destination=NewApplication
                Function=StartNextStateExecution
                Mode=ExpectsReply
    
            }
        }
    }
    
    +IDLE = {
        Class = ReferenceContainer
        +STOP = {
            Class=StateMachineEvent
            NextState = "INIT"
            NextStateError = "INIT"
        }        
    }
    
    
}

+NewApplication = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
    
        +GAM1 = {
                Class = IOGAM
                
                InputSignals = {
                
                    SignalIn1 = {
                        DataSource = DDB
                        Type = int8
                        
                        
                        NumberOfDimensions = 0
                        
                
                
                                                
                        Trigger = 0 
                    }
                
                    SignalIn2 = {
                        DataSource = DDB
                        Type = uint32
                        
                        
                        NumberOfDimensions = 1
                        
                        
                        NumberOfElements = 10
                
                
                                                
                        Trigger = 1 
                    }
                
                }
                
                
                OutputSignals = {
                
                    SignalOut1 = {
                        DataSource = DDB
                        Type = int8
                        
                        
                        NumberOfDimensions = 0
                        
                
                              
                                                
                        Trigger = 0 
                    }
                
                    SignalOut2 = {
                        DataSource = DDB
                        Type = int32
                        
                        
                        NumberOfDimensions = 1
                        
                        
                        NumberOfElements = 10
                
                              
                                                
                        Trigger = 0 
                    }
                
                }
                
                
        }
       +SendMessage_Ready_Progress = {
           Class = MessageGAM
           TriggerOnChange = 0
           +Events = {
               Class = ReferenceContainer
               +SwitchToStableEvent = {
                   Class = EventConditionTrigger
                   EventTrigger = {
                       Command_ReadyCondition = 1
                   }
                   +SwitchToStableMessage = {
                       Class = Message
                       Destination = StateMachine
                       Function = START
                       Mode = ExpectsReply
                   }
               }               
               +SwitchToErrorEvent = {
                   Class = EventConditionTrigger
                   EventTrigger = {
                       Command_StandbyCondition = 0
                       CommandScuUnstableCondition = 0
                   }
                   +SwitchToErrorMessage = {
                       Class = Message
                       Destination = StateMachine
                       Function = STOP
                       Mode = ExpectsReply
                   }
               }
               +SwitchToErrorEventTimeout = {
                   Class = EventConditionTrigger
                   EventTrigger = {
                       CommandTimeoutConditionReadyProgress = 1
                   }
                   +SwitchToErrorMessage = {
                       Class = Message
                       Destination = EPICS_CA
                       Function = Start
                       Mode = ExpectsReply
                   }
               }
           }
           InputSignals = {
               Command_StandbyCondition = {
                   Alias = StandbyCondition
                   Type = uint32
                   DataSource = DDB
               }
               Command_ReadyCondition = {
                   Alias = ReadyCondition
                   Type = uint32
                   DataSource = DDB
               }
               CommandScuUnstableCondition = {
                   Alias = ScuUnstableCondition 
                   Type = uint8
		           DataSource = DDB
               }                
               CommandTimeoutConditionReadyProgress = {
                   Alias = TimeoutConditionReadyProgress 
                   Type = uint8
		           DataSource = DDB
               }
           }
           OutputSignals = {
               Clear_StandbyCondition = {
                   Type = uint32
                   DataSource = DDB
               }           
               Clear_ReadyCondition = {
                   Type = uint32
                   DataSource = DDB
               }
               Clear_ScuUnstableCondition = {
                   Type = uint32
		           DataSource = DDB
               }                    
               Clear_TimeoutConditionReadyProgress = {
                   Type = uint32
		           DataSource = DDB
               }                    
           }
        }          

    }
    +Data = {
        Class = ReferenceContainer
        +Timings = {
            Class = TimingDataSource
        } 
    
        +DDB = {
            Class = GAMDataSource
            AllowNoProducers = 1
            ResetUnusedVariablesAtStateChange = 2
            
            
        }

        +LinuxTimer = {
            Class = LinuxTimer
            SleepNature = Busy
            ExecutionMode = IndependentThread
            
            SleepPercentage = 30
            
            
            
            
            
            Signals = {
            
                Counter = {
                    NumberOfDimensions = 0
                    NumberOfElements = 1
                    Type =  uint32
                }
            
                Time = {
                    NumberOfDimensions = 0
                    NumberOfElements = 1
                    Type =  uint32
                }
            
                AbsoluteTime = {
                    NumberOfDimensions = 0
                    NumberOfElements = 1
                    Type =  uint64
                }
            
                DeltaTime = {
                    NumberOfDimensions = 0
                    NumberOfElements = 1
                    Type =  uint64
                }
            
            }
            
            
        }
        +DANWriter1 = {
        	Class = DAN::DANSource
			NumberOfBuffers = 200000
        	CPUMask = 0x40000000000
            DanBufferMultiplier = 4
        	StackSize = 10000000
            NumberOfPreTriggers = 0
            NumberOfPostTriggers = 0
           	StoreOnTrigger = 1
			Signals = {
                Trigger_DAN = {
                    Type = uint8
                }			
				TIME_STAMP = {
                    Type = uint64
                    TimeSignal = 1
                    AbsoluteTime = 1 
				}
				TIME = {
                    Type = uint64
                    NodeName = "TIME"
                    Period = 500e-9
				}
                PPS = {
                    Type = uint8
                    NodeName = "PPS"
                    Period = 500e-9
                }	 
                BPS1_CUR = {
                    Type = uint16
                    NodeName = "BPS1_CUR"
                    Period = 500e-9
                }
        	}
        }        

    }
    +States = {
        Class = ReferenceContainer
        
        +IDLE = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                
                +Thread1 = {
                    Class = RealTimeThread
                    
                    CPUs = 1
                    
                    
                    Functions  = { GAM1 SendMessage_Ready_Progress }
                }
                +Thread2 = {
                    Class = RealTimeThread
                    
                    CPUs = 2
                    
                    
                    Functions  = { GAM1 }
                }
            }
        }
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
    
}

                                         
                                         

